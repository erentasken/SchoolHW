import random
class UnoCard: 
    def __init__(self, color, number):
        self.color = color
        self.number = number
    def __str__(self):
        if self.color == 0:
            return "green" +" "+  str(self.number)
        if self.color == 1:
            return "yellow" +" "+ str(self.number)
        if self.color == 2:
            return "blue" +" "+ str(self.number)
        if self.color == 3:
            return "red" +" "+  str(self.number)
    def canPlay(self, other):
        if self.color == other.color or self.number == other.number:
            return True
        else: 
            return False
class CollectionOfUnoCard:
    def __init__(self):
        self.l = []
    def addCard(self, color):
        self.l.append(color)
    def makeDeck(self):
        self.l.clear()
        for j in [0,1,2,3]:
            for i in range(1,10):
                self.l.append(UnoCard(j, i))
                self.l.append(UnoCard(j, i))
    def shuffle(self):
        random.shuffle(self.l)
    def __str__(self):
        s= ""
        for card in self.l:
            s+= str(card) + " "
        return s
    def getNumCards(self):
        return len(self.l)
    def getTopCard(self):
        return self.l[0]
    def canPlay(self, other):
        if self.color == other.color or self.number == other.number:
            return True
        else: 
            return False
    def getCard(self,index):
        return self.l[index]
class Uno:
    def __init__(self):  
        self.deck = CollectionOfUnoCard()
        self.deck.makeDeck()
        self.deck.shuffle()        
        self.hand1 = CollectionOfUnoCard()
        self.hand2 = CollectionOfUnoCard()
        for i in range(7):
            theCard = self.deck.l.pop()
            self.hand1.addCard(theCard)
        for i in range(7):
            theCard = self.deck.l.pop()
            self.hand2.addCard(theCard)
    def playGame(self):
        self.f=CollectionOfUnoCard()
        self.f.l = self.deck.l.copy()
        for i in range(self.hand2.getNumCards()-1,-1,-1):
            self.f.l.insert(0, self.hand2.l[i])
        for i in range(self.hand1.getNumCards()-1,-1,-1):
            self.f.l.insert(0,self.hand1.l[i])
        print("\n", "First Deck:", self.f, "\n")
        self.y=self.deck.getTopCard()
        self.deck.l.remove(self.y)    
        print("Cards are dealing...", "\n")
        print("Player1 is firstly starting...", "\n")
        self.s = 0
    def playTurn(self, player):
        if self.deck.getNumCards()!=0:
            if player == "hand1":
                self.player = self.hand1
            if player == "hand2":
                self.player =self.hand2
            self.s+=1
            if self.s == 1:
                print(f"First card on the table, {str(self.y)}","\n")
            if self.s!=1:
                print(f"Last played card {str(self.y)}","\n")
            print("Player1:", self.hand1)
            print("Player2:", self.hand2, "\n")
            print("Deck:", self.deck, "\n")
            l = []
            for i in range(self.player.getNumCards()):
                self.t=self.player.getCard(i)
                if self.t.canPlay(self.y) == True:
                    l.append(self.t)
            if len(l)!=0:
                print(f"{l[0]} Playable with {self.y}", "\n")
                self.y = l[0]
                self.player.l.remove(l[0])
            self.f = self.deck.getTopCard()
            if self.f.canPlay(self.y) == True and len(l) == 0: 
                self.deck.l.remove(self.deck.getTopCard())
                print(f"withdrawed {self.f} Playable with {str(self.y)}","\n")
                self.y = self.f
            if self.f.canPlay(self.y) == False and len(l) == 0:
                self.player.addCard(self.deck.getTopCard())
                self.deck.l.remove(self.deck.getTopCard())
            if player == "hand1":
                print(f"Player1 is done. It's Player2's turn.", "\n")
            if player == "hand2":
                print(f"Player2 is done. It's Player1's turn.","\n")
    def printResult(self):
        if self.deck.getNumCards() == 0:
            if self.hand1.getNumCards()>self.hand2.getNumCards():
                return "Player2 won"
            elif self.hand2.getNumCards()>self.hand1.getNumCards():
                return "Player1 won"
            else:
                return "It ended in a draw"
        if self.hand1.getNumCards() == 0:
            return "Player1 won"
        if self.hand2.getNumCards() == 0:
            return "Player2 won"
        if self.hand1.getNumCards()!= 0 and self.hand2.getNumCards()!= 0:
            return False
def main():
    global my_game
    my_game = Uno()
    my_game.playGame()
main()
def Continous(x):
    my_game.playTurn(x)
    if my_game.printResult()!=False:
        print(my_game.printResult())
    if my_game.printResult()==False:
        if x=="hand1":
            Continous("hand2")
        else:
            Continous("hand1")
Continous("hand1")
